.row {
    max-width: $grid-width;
    margin: 0 auto; // center the row  top & bottom = 0, left & right = auto

    @include media-breakpoint(tab-port) {
        width: 50rem;
        padding: 0 3rem;
    }

    @include media-breakpoint(phone-s) {
        width: 40rem;
        padding: 0 3rem;
    }

    /* If the row is not the last child */
    &:not(:last-child) {
        margin-bottom: $grid-gutter-vertical;

        @include media-breakpoint(tab-port) {
            margin-bottom: $grid-gutter-vertical-small;
        }
    }

    /* Note: ^ = start with, * = contains, $ = ends with */
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $grid-gutter-horizontal;

            @include media-breakpoint(tab-port) {
                margin-right: 0;
                margin-bottom: $grid-gutter-vertical-small;
            }
        }

        @include media-breakpoint(tab-port) {
            width: 100% !important;
        }
    }

    @include clearfix; // clear the float   




    .col-1-of-2 {
        width: calc((100% - #{$grid-gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - #{$grid-gutter-horizontal *2    }) / 3);
    }

    .col-1-of-4 {
        width: calc((100% - #{$grid-gutter-horizontal * 3    }) / 4);
    }

    .col-2-of-3 {
        width: calc(((100% - #{$grid-gutter-horizontal *2    }) / 3) * 2 + #{$grid-gutter-horizontal});
    }

    .col-2-of-4 {
        width: calc(((100% - #{$grid-gutter-horizontal * 3    }) / 4) * 2 + #{$grid-gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(((100% - #{$grid-gutter-horizontal * 3    }) / 4) * 3 + #{$grid-gutter-horizontal * 2});
    }
}